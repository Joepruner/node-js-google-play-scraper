{
  "_from": "csv-reorder",
  "_id": "csv-reorder@0.1.1",
  "_inBundle": false,
  "_integrity": "sha512-ZxSVz4Bc0IyqnalMny9lJxclN0DjbaApfrZ3Na/MRFiELz64jbJOClVEQHE2BS55U2MDrn/9VMBJ4IhjqbMszw==",
  "_location": "/csv-reorder",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "csv-reorder",
    "fetchSpec": "latest",
    "name": "csv-reorder",
    "raw": "csv-reorder",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/csv-reorder/-/csv-reorder-0.1.1.tgz",
  "_shasum": "81ac4f19eac7e8ad45a5f9679995e710df493e93",
  "_shrinkwrap": null,
  "_spec": "csv-reorder",
  "_where": "/home/joepruner/Projects/GooglePlayScraper/public/javascripts",
  "author": {
    "email": "jose@light.pt",
    "name": "Jos√© Carneiro"
  },
  "bin": {
    "csv-reorder": "./bin/reorder"
  },
  "bugs": {
    "url": "https://github.com/josecarneiro/csv-reorder/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "chalk": "^2.0.1",
    "commander": "^2.11.0",
    "csv": "^1.1.1",
    "figlet": "^1.2.0",
    "mkdirp": "^0.5.1"
  },
  "deprecated": false,
  "description": "csv-reorder is a small library that makes it easy to reorder the rows on a csv file given a column name. It can be used both as a command line utility, as well as a standalone node.js library.",
  "devDependencies": {
    "eslint": "^4.2.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-node": "^5.1.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.1"
  },
  "engines": {
    "node": "^6.11.0",
    "npm": "^4.0.0"
  },
  "homepage": "https://github.com/josecarneiro/csv-reorder#readme",
  "license": "MIT",
  "main": "index.js",
  "name": "csv-reorder",
  "optionalDependencies": {},
  "readme": "# csv-reorder\n\ncsv-reorder is a small library that makes it easy to reorder the rows on a csv file given a column name. It can be used both as a command line utility, as well as a standalone node.js library.\n\n### Requirements\n\n`csv-reoder` requires `node.js@^6.x.x`, as well as `npm@^4.x.x` or `Yarn`.\n\n## CLI Usage\n\n### Installation\n\nTo install the cli globally, from npm:\n\n```\nnpm install -g csv-reorder\n```\n\nOr downloading and running locally:\n\n```\nnpm install -g\n```\n\n### Options\n\n#### Input and Output\n\n`--input <path to file> --output <path to output>`\n\nalternatively, using the short form:\n\n`-I <path to file> -O <path to output>`\n\nThe output file cannot be the same as the input file.\n\n#### Sort order\n\nIn order for the rows to be sorted, csv-reorder must be given a column name:\n\n`--sort <column name>`\n\nor, in its short form\n\n`-S <column name>`\n\nOccasionally, a user might want to sort the rows by a property that shouldn't be interpreted as a string. In that case, the argument `sort-type` should be given:\n\n`--sort-type <type: 'number', 'date', 'boolean', 'string' (default)>`\n\nor\n\n`-T <...>`\n\nSorting can also be set as ascending (default) or descending:\n\n`--ascending`, which is equivalent to `-A`\n\nor\n\n`--descending`, equivalent to `-D`\n\n#### Remove duplicate rows\n\nA .csv document may contain duplicate rows. In order to remove duplicate rows from the final output file, use the following flag:\n\n`--remove-duplicates` or `-R`\n\n#### Metadata and stats output\n\n`csv-reorder` will output statistics about the operation unless told otherwise. For no output, use:\n\n`--silent` or `-Q`\n\n#### Help\n\nFor an explanation of each cli flag, run the command:\n\n```\ncsv-reorder --help\n```\n\n## Standalone Library\n\nAs an alternative, `csv-reorder` can also be used as a standalone library.\n\nInstall `csv-reorder` with `npm`:\n\n```\nnpm install csv-reorder --save\n```\n\nor, if you're using `Yarn`\n\n```\nyarn add csv-reorder\n```\n\n#### Usage\n\nExample script:\n\n```js\nconst reorder = require('csv-reorder');\n\nreorder({\n  input: './file.csv',\n  output: './output.csv',\n  sort: 'Launch Date',\n  type: 'date',\n  descending: false,\n  remove: true,\n  metadata: false\n})\n.then(metadata => {\n  // ...\n})\n.catch(error => {\n  // ...\n});\n```\n\n## Known issues\n\nDue to limitations in the csv specification, it is possible for valid csv files not to include a table header as it's first row. `csv-reorder` will always consider the first row to be a table header, and behave accordingly.\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/josecarneiro/csv-reorder.git"
  },
  "scripts": {
    "lint": "eslint ./ --cache --ignore-pattern .gitignore",
    "start": "node ./index.js",
    "test": "npm run test:names && npm run test:numbers && npm run test:dates && npm run test:silent && npm run test:error",
    "test:dates": "csv-reorder -I test/files/sp500.csv -O tmp/dates-output.csv -S Date",
    "test:error": "csv-reorder -I test/files/non-existant.csv -O tmp/no-output.csv -S Column",
    "test:names": "csv-reorder -I test/files/game-of-thrones-names.csv -O tmp/names-output.csv -S Actor -D",
    "test:numbers": "csv-reorder -I test/files/sp500.csv -O tmp/numbers-output.csv -S High -T number -D",
    "test:silent": "csv-reorder -I test/files/game-of-thrones-names.csv -O tmp/names-output.csv -S Actor -Q"
  },
  "version": "0.1.1",
  "warnings": [
    {
      "code": "ENOTSUP",
      "required": {
        "node": "^6.11.0",
        "npm": "^4.0.0"
      },
      "pkgid": "csv-reorder@0.1.1"
    },
    {
      "code": "ENOTSUP",
      "required": {
        "node": "^6.11.0",
        "npm": "^4.0.0"
      },
      "pkgid": "csv-reorder@0.1.1"
    }
  ]
}
